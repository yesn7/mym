/*
 * regs.h
 *
 *  Created on: 17/10/2016
 *      Author:
 */

#ifndef REGS_H_
#define REGS_H_

typedef unsigned int uint32_t;
//*****************************************************************************
//
// GPIO registers (PORTA AHB)
//
//*****************************************************************************
#define GPIO_PORTA_DATA_BITS_R  ((volatile uint32_t *)0x40058000)
#define GPIO_PORTA_DATA_R       (*((volatile uint32_t *)0x400583FC))
#define GPIO_PORTA_DIR_R        (*((volatile uint32_t *)0x40058400))
#define GPIO_PORTA_IS_R         (*((volatile uint32_t *)0x40058404))
#define GPIO_PORTA_IBE_R        (*((volatile uint32_t *)0x40058408))
#define GPIO_PORTA_IEV_R        (*((volatile uint32_t *)0x4005840C))
#define GPIO_PORTA_IM_R         (*((volatile uint32_t *)0x40058410))
#define GPIO_PORTA_RIS_R        (*((volatile uint32_t *)0x40058414))
#define GPIO_PORTA_MIS_R        (*((volatile uint32_t *)0x40058418))
#define GPIO_PORTA_ICR_R        (*((volatile uint32_t *)0x4005841C))
#define GPIO_PORTA_AFSEL_R      (*((volatile uint32_t *)0x40058420))
#define GPIO_PORTA_DR2R_R       (*((volatile uint32_t *)0x40058500))
#define GPIO_PORTA_DR4R_R       (*((volatile uint32_t *)0x40058504))
#define GPIO_PORTA_DR8R_R       (*((volatile uint32_t *)0x40058508))
#define GPIO_PORTA_ODR_R        (*((volatile uint32_t *)0x4005850C))
#define GPIO_PORTA_PUR_R        (*((volatile uint32_t *)0x40058510))
#define GPIO_PORTA_PDR_R        (*((volatile uint32_t *)0x40058514))
#define GPIO_PORTA_SLR_R        (*((volatile uint32_t *)0x40058518))
#define GPIO_PORTA_DEN_R        (*((volatile uint32_t *)0x4005851C))
#define GPIO_PORTA_LOCK_R       (*((volatile uint32_t *)0x40058520))
#define GPIO_PORTA_CR_R         (*((volatile uint32_t *)0x40058524))
#define GPIO_PORTA_AMSEL_R      (*((volatile uint32_t *)0x40058528))
#define GPIO_PORTA_PCTL_R       (*((volatile uint32_t *)0x4005852C))
#define GPIO_PORTA_ADCCTL_R     (*((volatile uint32_t *)0x40058530))
#define GPIO_PORTA_DMACTL_R     (*((volatile uint32_t *)0x40058534))
#define GPIO_PORTA_SI_R         (*((volatile uint32_t *)0x40058538))
#define GPIO_PORTA_DR12R_R      (*((volatile uint32_t *)0x4005853C))
#define GPIO_PORTA_WAKEPEN_R    (*((volatile uint32_t *)0x40058540))
#define GPIO_PORTA_WAKELVL_R    (*((volatile uint32_t *)0x40058544))
#define GPIO_PORTA_WAKESTAT_R   (*((volatile uint32_t *)0x40058548))
#define GPIO_PORTA_PP_R         (*((volatile uint32_t *)0x40058FC0))
#define GPIO_PORTA_PC_R         (*((volatile uint32_t *)0x40058FC4))

//*****************************************************************************
//
// GPIO registers (PORTB AHB)
//
//*****************************************************************************
#define GPIO_PORTB_DATA_BITS_R  ((volatile uint32_t *)0x40059000)
#define GPIO_PORTB_DATA_R       (*((volatile uint32_t *)0x400593FC))
#define GPIO_PORTB_DIR_R        (*((volatile uint32_t *)0x40059400))
#define GPIO_PORTB_IS_R         (*((volatile uint32_t *)0x40059404))
#define GPIO_PORTB_IBE_R        (*((volatile uint32_t *)0x40059408))
#define GPIO_PORTB_IEV_R        (*((volatile uint32_t *)0x4005940C))
#define GPIO_PORTB_IM_R         (*((volatile uint32_t *)0x40059410))
#define GPIO_PORTB_RIS_R        (*((volatile uint32_t *)0x40059414))
#define GPIO_PORTB_MIS_R        (*((volatile uint32_t *)0x40059418))
#define GPIO_PORTB_ICR_R        (*((volatile uint32_t *)0x4005941C))
#define GPIO_PORTB_AFSEL_R      (*((volatile uint32_t *)0x40059420))
#define GPIO_PORTB_DR2R_R       (*((volatile uint32_t *)0x40059500))
#define GPIO_PORTB_DR4R_R       (*((volatile uint32_t *)0x40059504))
#define GPIO_PORTB_DR8R_R       (*((volatile uint32_t *)0x40059508))
#define GPIO_PORTB_ODR_R        (*((volatile uint32_t *)0x4005950C))
#define GPIO_PORTB_PUR_R        (*((volatile uint32_t *)0x40059510))
#define GPIO_PORTB_PDR_R        (*((volatile uint32_t *)0x40059514))
#define GPIO_PORTB_SLR_R        (*((volatile uint32_t *)0x40059518))
#define GPIO_PORTB_DEN_R        (*((volatile uint32_t *)0x4005951C))
#define GPIO_PORTB_LOCK_R       (*((volatile uint32_t *)0x40059520))
#define GPIO_PORTB_CR_R         (*((volatile uint32_t *)0x40059524))
#define GPIO_PORTB_AMSEL_R      (*((volatile uint32_t *)0x40059528))
#define GPIO_PORTB_PCTL_R       (*((volatile uint32_t *)0x4005952C))
#define GPIO_PORTB_ADCCTL_R     (*((volatile uint32_t *)0x40059530))
#define GPIO_PORTB_DMACTL_R     (*((volatile uint32_t *)0x40059534))
#define GPIO_PORTB_SI_R         (*((volatile uint32_t *)0x40059538))
#define GPIO_PORTB_DR12R_R      (*((volatile uint32_t *)0x4005953C))
#define GPIO_PORTB_WAKEPEN_R    (*((volatile uint32_t *)0x40059540))
#define GPIO_PORTB_WAKELVL_R    (*((volatile uint32_t *)0x40059544))
#define GPIO_PORTB_WAKESTAT_R   (*((volatile uint32_t *)0x40059548))
#define GPIO_PORTB_PP_R         (*((volatile uint32_t *)0x40059FC0))
#define GPIO_PORTB_PC_R         (*((volatile uint32_t *)0x40059FC4))

//*****************************************************************************
//
// GPIO registers (PORTC AHB)
//
//*****************************************************************************
#define GPIO_PORTC_DATA_BITS_R  ((volatile uint32_t *)0x4005A000)
#define GPIO_PORTC_DATA_R       (*((volatile uint32_t *)0x4005A3FC))
#define GPIO_PORTC_DIR_R        (*((volatile uint32_t *)0x4005A400))
#define GPIO_PORTC_IS_R         (*((volatile uint32_t *)0x4005A404))
#define GPIO_PORTC_IBE_R        (*((volatile uint32_t *)0x4005A408))
#define GPIO_PORTC_IEV_R        (*((volatile uint32_t *)0x4005A40C))
#define GPIO_PORTC_IM_R         (*((volatile uint32_t *)0x4005A410))
#define GPIO_PORTC_RIS_R        (*((volatile uint32_t *)0x4005A414))
#define GPIO_PORTC_MIS_R        (*((volatile uint32_t *)0x4005A418))
#define GPIO_PORTC_ICR_R        (*((volatile uint32_t *)0x4005A41C))
#define GPIO_PORTC_AFSEL_R      (*((volatile uint32_t *)0x4005A420))
#define GPIO_PORTC_DR2R_R       (*((volatile uint32_t *)0x4005A500))
#define GPIO_PORTC_DR4R_R       (*((volatile uint32_t *)0x4005A504))
#define GPIO_PORTC_DR8R_R       (*((volatile uint32_t *)0x4005A508))
#define GPIO_PORTC_ODR_R        (*((volatile uint32_t *)0x4005A50C))
#define GPIO_PORTC_PUR_R        (*((volatile uint32_t *)0x4005A510))
#define GPIO_PORTC_PDR_R        (*((volatile uint32_t *)0x4005A514))
#define GPIO_PORTC_SLR_R        (*((volatile uint32_t *)0x4005A518))
#define GPIO_PORTC_DEN_R        (*((volatile uint32_t *)0x4005A51C))
#define GPIO_PORTC_LOCK_R       (*((volatile uint32_t *)0x4005A520))
#define GPIO_PORTC_CR_R         (*((volatile uint32_t *)0x4005A524))
#define GPIO_PORTC_AMSEL_R      (*((volatile uint32_t *)0x4005A528))
#define GPIO_PORTC_PCTL_R       (*((volatile uint32_t *)0x4005A52C))
#define GPIO_PORTC_ADCCTL_R     (*((volatile uint32_t *)0x4005A530))
#define GPIO_PORTC_DMACTL_R     (*((volatile uint32_t *)0x4005A534))
#define GPIO_PORTC_SI_R         (*((volatile uint32_t *)0x4005A538))
#define GPIO_PORTC_DR12R_R      (*((volatile uint32_t *)0x4005A53C))
#define GPIO_PORTC_WAKEPEN_R    (*((volatile uint32_t *)0x4005A540))
#define GPIO_PORTC_WAKELVL_R    (*((volatile uint32_t *)0x4005A544))
#define GPIO_PORTC_WAKESTAT_R   (*((volatile uint32_t *)0x4005A548))
#define GPIO_PORTC_PP_R         (*((volatile uint32_t *)0x4005AFC0))
#define GPIO_PORTC_PC_R         (*((volatile uint32_t *)0x4005AFC4))

//*****************************************************************************
//
// GPIO registers (PORTD AHB)
//
//*****************************************************************************
#define GPIO_PORTD_DATA_BITS_R  ((volatile uint32_t *)0x4005B000)
#define GPIO_PORTD_DATA_R       (*((volatile uint32_t *)0x4005B3FC))
#define GPIO_PORTD_DIR_R        (*((volatile uint32_t *)0x4005B400))
#define GPIO_PORTD_IS_R         (*((volatile uint32_t *)0x4005B404))
#define GPIO_PORTD_IBE_R        (*((volatile uint32_t *)0x4005B408))
#define GPIO_PORTD_IEV_R        (*((volatile uint32_t *)0x4005B40C))
#define GPIO_PORTD_IM_R         (*((volatile uint32_t *)0x4005B410))
#define GPIO_PORTD_RIS_R        (*((volatile uint32_t *)0x4005B414))
#define GPIO_PORTD_MIS_R        (*((volatile uint32_t *)0x4005B418))
#define GPIO_PORTD_ICR_R        (*((volatile uint32_t *)0x4005B41C))
#define GPIO_PORTD_AFSEL_R      (*((volatile uint32_t *)0x4005B420))
#define GPIO_PORTD_DR2R_R       (*((volatile uint32_t *)0x4005B500))
#define GPIO_PORTD_DR4R_R       (*((volatile uint32_t *)0x4005B504))
#define GPIO_PORTD_DR8R_R       (*((volatile uint32_t *)0x4005B508))
#define GPIO_PORTD_ODR_R        (*((volatile uint32_t *)0x4005B50C))
#define GPIO_PORTD_PUR_R        (*((volatile uint32_t *)0x4005B510))
#define GPIO_PORTD_PDR_R        (*((volatile uint32_t *)0x4005B514))
#define GPIO_PORTD_SLR_R        (*((volatile uint32_t *)0x4005B518))
#define GPIO_PORTD_DEN_R        (*((volatile uint32_t *)0x4005B51C))
#define GPIO_PORTD_LOCK_R       (*((volatile uint32_t *)0x4005B520))
#define GPIO_PORTD_CR_R         (*((volatile uint32_t *)0x4005B524))
#define GPIO_PORTD_AMSEL_R      (*((volatile uint32_t *)0x4005B528))
#define GPIO_PORTD_PCTL_R       (*((volatile uint32_t *)0x4005B52C))
#define GPIO_PORTD_ADCCTL_R     (*((volatile uint32_t *)0x4005B530))
#define GPIO_PORTD_DMACTL_R     (*((volatile uint32_t *)0x4005B534))
#define GPIO_PORTD_SI_R         (*((volatile uint32_t *)0x4005B538))
#define GPIO_PORTD_DR12R_R      (*((volatile uint32_t *)0x4005B53C))
#define GPIO_PORTD_WAKEPEN_R    (*((volatile uint32_t *)0x4005B540))
#define GPIO_PORTD_WAKELVL_R    (*((volatile uint32_t *)0x4005B544))
#define GPIO_PORTD_WAKESTAT_R   (*((volatile uint32_t *)0x4005B548))
#define GPIO_PORTD_PP_R         (*((volatile uint32_t *)0x4005BFC0))
#define GPIO_PORTD_PC_R         (*((volatile uint32_t *)0x4005BFC4))

//*****************************************************************************
//
// GPIO registers (PORTE AHB)
//
//*****************************************************************************
#define GPIO_PORTE_DATA_BITS_R  ((volatile uint32_t *)0x4005C000)
#define GPIO_PORTE_DATA_R       (*((volatile uint32_t *)0x4005C3FC))
#define GPIO_PORTE_DIR_R        (*((volatile uint32_t *)0x4005C400))
#define GPIO_PORTE_IS_R         (*((volatile uint32_t *)0x4005C404))
#define GPIO_PORTE_IBE_R        (*((volatile uint32_t *)0x4005C408))
#define GPIO_PORTE_IEV_R        (*((volatile uint32_t *)0x4005C40C))
#define GPIO_PORTE_IM_R         (*((volatile uint32_t *)0x4005C410))
#define GPIO_PORTE_RIS_R        (*((volatile uint32_t *)0x4005C414))
#define GPIO_PORTE_MIS_R        (*((volatile uint32_t *)0x4005C418))
#define GPIO_PORTE_ICR_R        (*((volatile uint32_t *)0x4005C41C))
#define GPIO_PORTE_AFSEL_R      (*((volatile uint32_t *)0x4005C420))
#define GPIO_PORTE_DR2R_R       (*((volatile uint32_t *)0x4005C500))
#define GPIO_PORTE_DR4R_R       (*((volatile uint32_t *)0x4005C504))
#define GPIO_PORTE_DR8R_R       (*((volatile uint32_t *)0x4005C508))
#define GPIO_PORTE_ODR_R        (*((volatile uint32_t *)0x4005C50C))
#define GPIO_PORTE_PUR_R        (*((volatile uint32_t *)0x4005C510))
#define GPIO_PORTE_PDR_R        (*((volatile uint32_t *)0x4005C514))
#define GPIO_PORTE_SLR_R        (*((volatile uint32_t *)0x4005C518))
#define GPIO_PORTE_DEN_R        (*((volatile uint32_t *)0x4005C51C))
#define GPIO_PORTE_LOCK_R       (*((volatile uint32_t *)0x4005C520))
#define GPIO_PORTE_CR_R         (*((volatile uint32_t *)0x4005C524))
#define GPIO_PORTE_AMSEL_R      (*((volatile uint32_t *)0x4005C528))
#define GPIO_PORTE_PCTL_R       (*((volatile uint32_t *)0x4005C52C))
#define GPIO_PORTE_ADCCTL_R     (*((volatile uint32_t *)0x4005C530))
#define GPIO_PORTE_DMACTL_R     (*((volatile uint32_t *)0x4005C534))
#define GPIO_PORTE_SI_R         (*((volatile uint32_t *)0x4005C538))
#define GPIO_PORTE_DR12R_R      (*((volatile uint32_t *)0x4005C53C))
#define GPIO_PORTE_WAKEPEN_R    (*((volatile uint32_t *)0x4005C540))
#define GPIO_PORTE_WAKELVL_R    (*((volatile uint32_t *)0x4005C544))
#define GPIO_PORTE_WAKESTAT_R   (*((volatile uint32_t *)0x4005C548))
#define GPIO_PORTE_PP_R         (*((volatile uint32_t *)0x4005CFC0))
#define GPIO_PORTE_PC_R         (*((volatile uint32_t *)0x4005CFC4))

//*****************************************************************************
//
// GPIO registers (PORTF AHB)
//
//*****************************************************************************
#define GPIO_PORTF_DATA_BITS_R  ((volatile uint32_t *)0x4005D000)
#define GPIO_PORTF_DATA_R       (*((volatile uint32_t *)0x4005D3FC))
#define GPIO_PORTF_DIR_R        (*((volatile uint32_t *)0x4005D400))
#define GPIO_PORTF_IS_R         (*((volatile uint32_t *)0x4005D404))
#define GPIO_PORTF_IBE_R        (*((volatile uint32_t *)0x4005D408))
#define GPIO_PORTF_IEV_R        (*((volatile uint32_t *)0x4005D40C))
#define GPIO_PORTF_IM_R         (*((volatile uint32_t *)0x4005D410))
#define GPIO_PORTF_RIS_R        (*((volatile uint32_t *)0x4005D414))
#define GPIO_PORTF_MIS_R        (*((volatile uint32_t *)0x4005D418))
#define GPIO_PORTF_ICR_R        (*((volatile uint32_t *)0x4005D41C))
#define GPIO_PORTF_AFSEL_R      (*((volatile uint32_t *)0x4005D420))
#define GPIO_PORTF_DR2R_R       (*((volatile uint32_t *)0x4005D500))
#define GPIO_PORTF_DR4R_R       (*((volatile uint32_t *)0x4005D504))
#define GPIO_PORTF_DR8R_R       (*((volatile uint32_t *)0x4005D508))
#define GPIO_PORTF_ODR_R        (*((volatile uint32_t *)0x4005D50C))
#define GPIO_PORTF_PUR_R        (*((volatile uint32_t *)0x4005D510))
#define GPIO_PORTF_PDR_R        (*((volatile uint32_t *)0x4005D514))
#define GPIO_PORTF_SLR_R        (*((volatile uint32_t *)0x4005D518))
#define GPIO_PORTF_DEN_R        (*((volatile uint32_t *)0x4005D51C))
#define GPIO_PORTF_LOCK_R       (*((volatile uint32_t *)0x4005D520))
#define GPIO_PORTF_CR_R         (*((volatile uint32_t *)0x4005D524))
#define GPIO_PORTF_AMSEL_R      (*((volatile uint32_t *)0x4005D528))
#define GPIO_PORTF_PCTL_R       (*((volatile uint32_t *)0x4005D52C))
#define GPIO_PORTF_ADCCTL_R     (*((volatile uint32_t *)0x4005D530))
#define GPIO_PORTF_DMACTL_R     (*((volatile uint32_t *)0x4005D534))
#define GPIO_PORTF_SI_R         (*((volatile uint32_t *)0x4005D538))
#define GPIO_PORTF_DR12R_R      (*((volatile uint32_t *)0x4005D53C))
#define GPIO_PORTF_WAKEPEN_R    (*((volatile uint32_t *)0x4005D540))
#define GPIO_PORTF_WAKELVL_R    (*((volatile uint32_t *)0x4005D544))
#define GPIO_PORTF_WAKESTAT_R   (*((volatile uint32_t *)0x4005D548))
#define GPIO_PORTF_PP_R         (*((volatile uint32_t *)0x4005DFC0))
#define GPIO_PORTF_PC_R         (*((volatile uint32_t *)0x4005DFC4))

//*****************************************************************************
//
// GPIO registers (PORTG AHB)
//
//*****************************************************************************
#define GPIO_PORTG_DATA_BITS_R  ((volatile uint32_t *)0x4005E000)
#define GPIO_PORTG_DATA_R       (*((volatile uint32_t *)0x4005E3FC))
#define GPIO_PORTG_DIR_R        (*((volatile uint32_t *)0x4005E400))
#define GPIO_PORTG_IS_R         (*((volatile uint32_t *)0x4005E404))
#define GPIO_PORTG_IBE_R        (*((volatile uint32_t *)0x4005E408))
#define GPIO_PORTG_IEV_R        (*((volatile uint32_t *)0x4005E40C))
#define GPIO_PORTG_IM_R         (*((volatile uint32_t *)0x4005E410))
#define GPIO_PORTG_RIS_R        (*((volatile uint32_t *)0x4005E414))
#define GPIO_PORTG_MIS_R        (*((volatile uint32_t *)0x4005E418))
#define GPIO_PORTG_ICR_R        (*((volatile uint32_t *)0x4005E41C))
#define GPIO_PORTG_AFSEL_R      (*((volatile uint32_t *)0x4005E420))
#define GPIO_PORTG_DR2R_R       (*((volatile uint32_t *)0x4005E500))
#define GPIO_PORTG_DR4R_R       (*((volatile uint32_t *)0x4005E504))
#define GPIO_PORTG_DR8R_R       (*((volatile uint32_t *)0x4005E508))
#define GPIO_PORTG_ODR_R        (*((volatile uint32_t *)0x4005E50C))
#define GPIO_PORTG_PUR_R        (*((volatile uint32_t *)0x4005E510))
#define GPIO_PORTG_PDR_R        (*((volatile uint32_t *)0x4005E514))
#define GPIO_PORTG_SLR_R        (*((volatile uint32_t *)0x4005E518))
#define GPIO_PORTG_DEN_R        (*((volatile uint32_t *)0x4005E51C))
#define GPIO_PORTG_LOCK_R       (*((volatile uint32_t *)0x4005E520))
#define GPIO_PORTG_CR_R         (*((volatile uint32_t *)0x4005E524))
#define GPIO_PORTG_AMSEL_R      (*((volatile uint32_t *)0x4005E528))
#define GPIO_PORTG_PCTL_R       (*((volatile uint32_t *)0x4005E52C))
#define GPIO_PORTG_ADCCTL_R     (*((volatile uint32_t *)0x4005E530))
#define GPIO_PORTG_DMACTL_R     (*((volatile uint32_t *)0x4005E534))
#define GPIO_PORTG_SI_R         (*((volatile uint32_t *)0x4005E538))
#define GPIO_PORTG_DR12R_R      (*((volatile uint32_t *)0x4005E53C))
#define GPIO_PORTG_WAKEPEN_R    (*((volatile uint32_t *)0x4005E540))
#define GPIO_PORTG_WAKELVL_R    (*((volatile uint32_t *)0x4005E544))
#define GPIO_PORTG_WAKESTAT_R   (*((volatile uint32_t *)0x4005E548))
#define GPIO_PORTG_PP_R         (*((volatile uint32_t *)0x4005EFC0))
#define GPIO_PORTG_PC_R         (*((volatile uint32_t *)0x4005EFC4))

//*****************************************************************************
//
// GPIO registers (PORTH AHB)
//
//*****************************************************************************
#define GPIO_PORTH_DATA_BITS_R  ((volatile uint32_t *)0x4005F000)
#define GPIO_PORTH_DATA_R       (*((volatile uint32_t *)0x4005F3FC))
#define GPIO_PORTH_DIR_R        (*((volatile uint32_t *)0x4005F400))
#define GPIO_PORTH_IS_R         (*((volatile uint32_t *)0x4005F404))
#define GPIO_PORTH_IBE_R        (*((volatile uint32_t *)0x4005F408))
#define GPIO_PORTH_IEV_R        (*((volatile uint32_t *)0x4005F40C))
#define GPIO_PORTH_IM_R         (*((volatile uint32_t *)0x4005F410))
#define GPIO_PORTH_RIS_R        (*((volatile uint32_t *)0x4005F414))
#define GPIO_PORTH_MIS_R        (*((volatile uint32_t *)0x4005F418))
#define GPIO_PORTH_ICR_R        (*((volatile uint32_t *)0x4005F41C))
#define GPIO_PORTH_AFSEL_R      (*((volatile uint32_t *)0x4005F420))
#define GPIO_PORTH_DR2R_R       (*((volatile uint32_t *)0x4005F500))
#define GPIO_PORTH_DR4R_R       (*((volatile uint32_t *)0x4005F504))
#define GPIO_PORTH_DR8R_R       (*((volatile uint32_t *)0x4005F508))
#define GPIO_PORTH_ODR_R        (*((volatile uint32_t *)0x4005F50C))
#define GPIO_PORTH_PUR_R        (*((volatile uint32_t *)0x4005F510))
#define GPIO_PORTH_PDR_R        (*((volatile uint32_t *)0x4005F514))
#define GPIO_PORTH_SLR_R        (*((volatile uint32_t *)0x4005F518))
#define GPIO_PORTH_DEN_R        (*((volatile uint32_t *)0x4005F51C))
#define GPIO_PORTH_LOCK_R       (*((volatile uint32_t *)0x4005F520))
#define GPIO_PORTH_CR_R         (*((volatile uint32_t *)0x4005F524))
#define GPIO_PORTH_AMSEL_R      (*((volatile uint32_t *)0x4005F528))
#define GPIO_PORTH_PCTL_R       (*((volatile uint32_t *)0x4005F52C))
#define GPIO_PORTH_ADCCTL_R     (*((volatile uint32_t *)0x4005F530))
#define GPIO_PORTH_DMACTL_R     (*((volatile uint32_t *)0x4005F534))
#define GPIO_PORTH_SI_R         (*((volatile uint32_t *)0x4005F538))
#define GPIO_PORTH_DR12R_R      (*((volatile uint32_t *)0x4005F53C))
#define GPIO_PORTH_WAKEPEN_R    (*((volatile uint32_t *)0x4005F540))
#define GPIO_PORTH_WAKELVL_R    (*((volatile uint32_t *)0x4005F544))
#define GPIO_PORTH_WAKESTAT_R   (*((volatile uint32_t *)0x4005F548))
#define GPIO_PORTH_PP_R         (*((volatile uint32_t *)0x4005FFC0))
#define GPIO_PORTH_PC_R         (*((volatile uint32_t *)0x4005FFC4))

//*****************************************************************************
//
// GPIO registers (PORTJ AHB)
//
//*****************************************************************************
#define GPIO_PORTJ_DATA_BITS_R  ((volatile uint32_t *)0x40060000)
#define GPIO_PORTJ_DATA_R       (*((volatile uint32_t *)0x400603FC))
#define GPIO_PORTJ_DIR_R        (*((volatile uint32_t *)0x40060400))
#define GPIO_PORTJ_IS_R         (*((volatile uint32_t *)0x40060404))
#define GPIO_PORTJ_IBE_R        (*((volatile uint32_t *)0x40060408))
#define GPIO_PORTJ_IEV_R        (*((volatile uint32_t *)0x4006040C))
#define GPIO_PORTJ_IM_R         (*((volatile uint32_t *)0x40060410))
#define GPIO_PORTJ_RIS_R        (*((volatile uint32_t *)0x40060414))
#define GPIO_PORTJ_MIS_R        (*((volatile uint32_t *)0x40060418))
#define GPIO_PORTJ_ICR_R        (*((volatile uint32_t *)0x4006041C))
#define GPIO_PORTJ_AFSEL_R      (*((volatile uint32_t *)0x40060420))
#define GPIO_PORTJ_DR2R_R       (*((volatile uint32_t *)0x40060500))
#define GPIO_PORTJ_DR4R_R       (*((volatile uint32_t *)0x40060504))
#define GPIO_PORTJ_DR8R_R       (*((volatile uint32_t *)0x40060508))
#define GPIO_PORTJ_ODR_R        (*((volatile uint32_t *)0x4006050C))
#define GPIO_PORTJ_PUR_R        (*((volatile uint32_t *)0x40060510))
#define GPIO_PORTJ_PDR_R        (*((volatile uint32_t *)0x40060514))
#define GPIO_PORTJ_SLR_R        (*((volatile uint32_t *)0x40060518))
#define GPIO_PORTJ_DEN_R        (*((volatile uint32_t *)0x4006051C))
#define GPIO_PORTJ_LOCK_R       (*((volatile uint32_t *)0x40060520))
#define GPIO_PORTJ_CR_R         (*((volatile uint32_t *)0x40060524))
#define GPIO_PORTJ_AMSEL_R      (*((volatile uint32_t *)0x40060528))
#define GPIO_PORTJ_PCTL_R       (*((volatile uint32_t *)0x4006052C))
#define GPIO_PORTJ_ADCCTL_R     (*((volatile uint32_t *)0x40060530))
#define GPIO_PORTJ_DMACTL_R     (*((volatile uint32_t *)0x40060534))
#define GPIO_PORTJ_SI_R         (*((volatile uint32_t *)0x40060538))
#define GPIO_PORTJ_DR12R_R      (*((volatile uint32_t *)0x4006053C))
#define GPIO_PORTJ_WAKEPEN_R    (*((volatile uint32_t *)0x40060540))
#define GPIO_PORTJ_WAKELVL_R    (*((volatile uint32_t *)0x40060544))
#define GPIO_PORTJ_WAKESTAT_R   (*((volatile uint32_t *)0x40060548))
#define GPIO_PORTJ_PP_R         (*((volatile uint32_t *)0x40060FC0))
#define GPIO_PORTJ_PC_R         (*((volatile uint32_t *)0x40060FC4))

//*****************************************************************************
//
// GPIO registers (PORTK)
//
//*****************************************************************************
#define GPIO_PORTK_DATA_BITS_R  ((volatile uint32_t *)0x40061000)
#define GPIO_PORTK_DATA_R       (*((volatile uint32_t *)0x400613FC))
#define GPIO_PORTK_DIR_R        (*((volatile uint32_t *)0x40061400))
#define GPIO_PORTK_IS_R         (*((volatile uint32_t *)0x40061404))
#define GPIO_PORTK_IBE_R        (*((volatile uint32_t *)0x40061408))
#define GPIO_PORTK_IEV_R        (*((volatile uint32_t *)0x4006140C))
#define GPIO_PORTK_IM_R         (*((volatile uint32_t *)0x40061410))
#define GPIO_PORTK_RIS_R        (*((volatile uint32_t *)0x40061414))
#define GPIO_PORTK_MIS_R        (*((volatile uint32_t *)0x40061418))
#define GPIO_PORTK_ICR_R        (*((volatile uint32_t *)0x4006141C))
#define GPIO_PORTK_AFSEL_R      (*((volatile uint32_t *)0x40061420))
#define GPIO_PORTK_DR2R_R       (*((volatile uint32_t *)0x40061500))
#define GPIO_PORTK_DR4R_R       (*((volatile uint32_t *)0x40061504))
#define GPIO_PORTK_DR8R_R       (*((volatile uint32_t *)0x40061508))
#define GPIO_PORTK_ODR_R        (*((volatile uint32_t *)0x4006150C))
#define GPIO_PORTK_PUR_R        (*((volatile uint32_t *)0x40061510))
#define GPIO_PORTK_PDR_R        (*((volatile uint32_t *)0x40061514))
#define GPIO_PORTK_SLR_R        (*((volatile uint32_t *)0x40061518))
#define GPIO_PORTK_DEN_R        (*((volatile uint32_t *)0x4006151C))
#define GPIO_PORTK_LOCK_R       (*((volatile uint32_t *)0x40061520))
#define GPIO_PORTK_CR_R         (*((volatile uint32_t *)0x40061524))
#define GPIO_PORTK_AMSEL_R      (*((volatile uint32_t *)0x40061528))
#define GPIO_PORTK_PCTL_R       (*((volatile uint32_t *)0x4006152C))
#define GPIO_PORTK_ADCCTL_R     (*((volatile uint32_t *)0x40061530))
#define GPIO_PORTK_DMACTL_R     (*((volatile uint32_t *)0x40061534))
#define GPIO_PORTK_SI_R         (*((volatile uint32_t *)0x40061538))
#define GPIO_PORTK_DR12R_R      (*((volatile uint32_t *)0x4006153C))
#define GPIO_PORTK_WAKEPEN_R    (*((volatile uint32_t *)0x40061540))
#define GPIO_PORTK_WAKELVL_R    (*((volatile uint32_t *)0x40061544))
#define GPIO_PORTK_WAKESTAT_R   (*((volatile uint32_t *)0x40061548))
#define GPIO_PORTK_PP_R         (*((volatile uint32_t *)0x40061FC0))
#define GPIO_PORTK_PC_R         (*((volatile uint32_t *)0x40061FC4))

//*****************************************************************************
//
// GPIO registers (PORTL)
//
//*****************************************************************************
#define GPIO_PORTL_DATA_BITS_R  ((volatile uint32_t *)0x40062000)
#define GPIO_PORTL_DATA_R       (*((volatile uint32_t *)0x400623FC))
#define GPIO_PORTL_DIR_R        (*((volatile uint32_t *)0x40062400))
#define GPIO_PORTL_IS_R         (*((volatile uint32_t *)0x40062404))
#define GPIO_PORTL_IBE_R        (*((volatile uint32_t *)0x40062408))
#define GPIO_PORTL_IEV_R        (*((volatile uint32_t *)0x4006240C))
#define GPIO_PORTL_IM_R         (*((volatile uint32_t *)0x40062410))
#define GPIO_PORTL_RIS_R        (*((volatile uint32_t *)0x40062414))
#define GPIO_PORTL_MIS_R        (*((volatile uint32_t *)0x40062418))
#define GPIO_PORTL_ICR_R        (*((volatile uint32_t *)0x4006241C))
#define GPIO_PORTL_AFSEL_R      (*((volatile uint32_t *)0x40062420))
#define GPIO_PORTL_DR2R_R       (*((volatile uint32_t *)0x40062500))
#define GPIO_PORTL_DR4R_R       (*((volatile uint32_t *)0x40062504))
#define GPIO_PORTL_DR8R_R       (*((volatile uint32_t *)0x40062508))
#define GPIO_PORTL_ODR_R        (*((volatile uint32_t *)0x4006250C))
#define GPIO_PORTL_PUR_R        (*((volatile uint32_t *)0x40062510))
#define GPIO_PORTL_PDR_R        (*((volatile uint32_t *)0x40062514))
#define GPIO_PORTL_SLR_R        (*((volatile uint32_t *)0x40062518))
#define GPIO_PORTL_DEN_R        (*((volatile uint32_t *)0x4006251C))
#define GPIO_PORTL_LOCK_R       (*((volatile uint32_t *)0x40062520))
#define GPIO_PORTL_CR_R         (*((volatile uint32_t *)0x40062524))
#define GPIO_PORTL_AMSEL_R      (*((volatile uint32_t *)0x40062528))
#define GPIO_PORTL_PCTL_R       (*((volatile uint32_t *)0x4006252C))
#define GPIO_PORTL_ADCCTL_R     (*((volatile uint32_t *)0x40062530))
#define GPIO_PORTL_DMACTL_R     (*((volatile uint32_t *)0x40062534))
#define GPIO_PORTL_SI_R         (*((volatile uint32_t *)0x40062538))
#define GPIO_PORTL_DR12R_R      (*((volatile uint32_t *)0x4006253C))
#define GPIO_PORTL_WAKEPEN_R    (*((volatile uint32_t *)0x40062540))
#define GPIO_PORTL_WAKELVL_R    (*((volatile uint32_t *)0x40062544))
#define GPIO_PORTL_WAKESTAT_R   (*((volatile uint32_t *)0x40062548))
#define GPIO_PORTL_PP_R         (*((volatile uint32_t *)0x40062FC0))
#define GPIO_PORTL_PC_R         (*((volatile uint32_t *)0x40062FC4))

//*****************************************************************************
//
// GPIO registers (PORTM)
//
//*****************************************************************************
#define GPIO_PORTM_DATA_BITS_R  ((volatile uint32_t *)0x40063000)
#define GPIO_PORTM_DATA_R       (*((volatile uint32_t *)0x400633FC))
#define GPIO_PORTM_DIR_R        (*((volatile uint32_t *)0x40063400))
#define GPIO_PORTM_IS_R         (*((volatile uint32_t *)0x40063404))
#define GPIO_PORTM_IBE_R        (*((volatile uint32_t *)0x40063408))
#define GPIO_PORTM_IEV_R        (*((volatile uint32_t *)0x4006340C))
#define GPIO_PORTM_IM_R         (*((volatile uint32_t *)0x40063410))
#define GPIO_PORTM_RIS_R        (*((volatile uint32_t *)0x40063414))
#define GPIO_PORTM_MIS_R        (*((volatile uint32_t *)0x40063418))
#define GPIO_PORTM_ICR_R        (*((volatile uint32_t *)0x4006341C))
#define GPIO_PORTM_AFSEL_R      (*((volatile uint32_t *)0x40063420))
#define GPIO_PORTM_DR2R_R       (*((volatile uint32_t *)0x40063500))
#define GPIO_PORTM_DR4R_R       (*((volatile uint32_t *)0x40063504))
#define GPIO_PORTM_DR8R_R       (*((volatile uint32_t *)0x40063508))
#define GPIO_PORTM_ODR_R        (*((volatile uint32_t *)0x4006350C))
#define GPIO_PORTM_PUR_R        (*((volatile uint32_t *)0x40063510))
#define GPIO_PORTM_PDR_R        (*((volatile uint32_t *)0x40063514))
#define GPIO_PORTM_SLR_R        (*((volatile uint32_t *)0x40063518))
#define GPIO_PORTM_DEN_R        (*((volatile uint32_t *)0x4006351C))
#define GPIO_PORTM_LOCK_R       (*((volatile uint32_t *)0x40063520))
#define GPIO_PORTM_CR_R         (*((volatile uint32_t *)0x40063524))
#define GPIO_PORTM_AMSEL_R      (*((volatile uint32_t *)0x40063528))
#define GPIO_PORTM_PCTL_R       (*((volatile uint32_t *)0x4006352C))
#define GPIO_PORTM_ADCCTL_R     (*((volatile uint32_t *)0x40063530))
#define GPIO_PORTM_DMACTL_R     (*((volatile uint32_t *)0x40063534))
#define GPIO_PORTM_SI_R         (*((volatile uint32_t *)0x40063538))
#define GPIO_PORTM_DR12R_R      (*((volatile uint32_t *)0x4006353C))
#define GPIO_PORTM_WAKEPEN_R    (*((volatile uint32_t *)0x40063540))
#define GPIO_PORTM_WAKELVL_R    (*((volatile uint32_t *)0x40063544))
#define GPIO_PORTM_WAKESTAT_R   (*((volatile uint32_t *)0x40063548))
#define GPIO_PORTM_PP_R         (*((volatile uint32_t *)0x40063FC0))
#define GPIO_PORTM_PC_R         (*((volatile uint32_t *)0x40063FC4))

//*****************************************************************************
//
// GPIO registers (PORTN)
//
//*****************************************************************************
#define GPIO_PORTN_DATA_BITS_R  ((volatile uint32_t *)0x40064000)
#define GPIO_PORTN_DATA_R       (*((volatile uint32_t *)0x400643FC))
#define GPIO_PORTN_DIR_R        (*((volatile uint32_t *)0x40064400))
#define GPIO_PORTN_IS_R         (*((volatile uint32_t *)0x40064404))
#define GPIO_PORTN_IBE_R        (*((volatile uint32_t *)0x40064408))
#define GPIO_PORTN_IEV_R        (*((volatile uint32_t *)0x4006440C))
#define GPIO_PORTN_IM_R         (*((volatile uint32_t *)0x40064410))
#define GPIO_PORTN_RIS_R        (*((volatile uint32_t *)0x40064414))
#define GPIO_PORTN_MIS_R        (*((volatile uint32_t *)0x40064418))
#define GPIO_PORTN_ICR_R        (*((volatile uint32_t *)0x4006441C))
#define GPIO_PORTN_AFSEL_R      (*((volatile uint32_t *)0x40064420))
#define GPIO_PORTN_DR2R_R       (*((volatile uint32_t *)0x40064500))
#define GPIO_PORTN_DR4R_R       (*((volatile uint32_t *)0x40064504))
#define GPIO_PORTN_DR8R_R       (*((volatile uint32_t *)0x40064508))
#define GPIO_PORTN_ODR_R        (*((volatile uint32_t *)0x4006450C))
#define GPIO_PORTN_PUR_R        (*((volatile uint32_t *)0x40064510))
#define GPIO_PORTN_PDR_R        (*((volatile uint32_t *)0x40064514))
#define GPIO_PORTN_SLR_R        (*((volatile uint32_t *)0x40064518))
#define GPIO_PORTN_DEN_R        (*((volatile uint32_t *)0x4006451C))
#define GPIO_PORTN_LOCK_R       (*((volatile uint32_t *)0x40064520))
#define GPIO_PORTN_CR_R         (*((volatile uint32_t *)0x40064524))
#define GPIO_PORTN_AMSEL_R      (*((volatile uint32_t *)0x40064528))
#define GPIO_PORTN_PCTL_R       (*((volatile uint32_t *)0x4006452C))
#define GPIO_PORTN_ADCCTL_R     (*((volatile uint32_t *)0x40064530))
#define GPIO_PORTN_DMACTL_R     (*((volatile uint32_t *)0x40064534))
#define GPIO_PORTN_SI_R         (*((volatile uint32_t *)0x40064538))
#define GPIO_PORTN_DR12R_R      (*((volatile uint32_t *)0x4006453C))
#define GPIO_PORTN_WAKEPEN_R    (*((volatile uint32_t *)0x40064540))
#define GPIO_PORTN_WAKELVL_R    (*((volatile uint32_t *)0x40064544))
#define GPIO_PORTN_WAKESTAT_R   (*((volatile uint32_t *)0x40064548))
#define GPIO_PORTN_PP_R         (*((volatile uint32_t *)0x40064FC0))
#define GPIO_PORTN_PC_R         (*((volatile uint32_t *)0x40064FC4))

//*****************************************************************************
//
// GPIO registers (PORTP)
//
//*****************************************************************************
#define GPIO_PORTP_DATA_BITS_R  ((volatile uint32_t *)0x40065000)
#define GPIO_PORTP_DATA_R       (*((volatile uint32_t *)0x400653FC))
#define GPIO_PORTP_DIR_R        (*((volatile uint32_t *)0x40065400))
#define GPIO_PORTP_IS_R         (*((volatile uint32_t *)0x40065404))
#define GPIO_PORTP_IBE_R        (*((volatile uint32_t *)0x40065408))
#define GPIO_PORTP_IEV_R        (*((volatile uint32_t *)0x4006540C))
#define GPIO_PORTP_IM_R         (*((volatile uint32_t *)0x40065410))
#define GPIO_PORTP_RIS_R        (*((volatile uint32_t *)0x40065414))
#define GPIO_PORTP_MIS_R        (*((volatile uint32_t *)0x40065418))
#define GPIO_PORTP_ICR_R        (*((volatile uint32_t *)0x4006541C))
#define GPIO_PORTP_AFSEL_R      (*((volatile uint32_t *)0x40065420))
#define GPIO_PORTP_DR2R_R       (*((volatile uint32_t *)0x40065500))
#define GPIO_PORTP_DR4R_R       (*((volatile uint32_t *)0x40065504))
#define GPIO_PORTP_DR8R_R       (*((volatile uint32_t *)0x40065508))
#define GPIO_PORTP_ODR_R        (*((volatile uint32_t *)0x4006550C))
#define GPIO_PORTP_PUR_R        (*((volatile uint32_t *)0x40065510))
#define GPIO_PORTP_PDR_R        (*((volatile uint32_t *)0x40065514))
#define GPIO_PORTP_SLR_R        (*((volatile uint32_t *)0x40065518))
#define GPIO_PORTP_DEN_R        (*((volatile uint32_t *)0x4006551C))
#define GPIO_PORTP_LOCK_R       (*((volatile uint32_t *)0x40065520))
#define GPIO_PORTP_CR_R         (*((volatile uint32_t *)0x40065524))
#define GPIO_PORTP_AMSEL_R      (*((volatile uint32_t *)0x40065528))
#define GPIO_PORTP_PCTL_R       (*((volatile uint32_t *)0x4006552C))
#define GPIO_PORTP_ADCCTL_R     (*((volatile uint32_t *)0x40065530))
#define GPIO_PORTP_DMACTL_R     (*((volatile uint32_t *)0x40065534))
#define GPIO_PORTP_SI_R         (*((volatile uint32_t *)0x40065538))
#define GPIO_PORTP_DR12R_R      (*((volatile uint32_t *)0x4006553C))
#define GPIO_PORTP_WAKEPEN_R    (*((volatile uint32_t *)0x40065540))
#define GPIO_PORTP_WAKELVL_R    (*((volatile uint32_t *)0x40065544))
#define GPIO_PORTP_WAKESTAT_R   (*((volatile uint32_t *)0x40065548))
#define GPIO_PORTP_PP_R         (*((volatile uint32_t *)0x40065FC0))
#define GPIO_PORTP_PC_R         (*((volatile uint32_t *)0x40065FC4))

//*****************************************************************************
//
// GPIO registers (PORTQ)
//
//*****************************************************************************
#define GPIO_PORTQ_DATA_BITS_R  ((volatile uint32_t *)0x40066000)
#define GPIO_PORTQ_DATA_R       (*((volatile uint32_t *)0x400663FC))
#define GPIO_PORTQ_DIR_R        (*((volatile uint32_t *)0x40066400))
#define GPIO_PORTQ_IS_R         (*((volatile uint32_t *)0x40066404))
#define GPIO_PORTQ_IBE_R        (*((volatile uint32_t *)0x40066408))
#define GPIO_PORTQ_IEV_R        (*((volatile uint32_t *)0x4006640C))
#define GPIO_PORTQ_IM_R         (*((volatile uint32_t *)0x40066410))
#define GPIO_PORTQ_RIS_R        (*((volatile uint32_t *)0x40066414))
#define GPIO_PORTQ_MIS_R        (*((volatile uint32_t *)0x40066418))
#define GPIO_PORTQ_ICR_R        (*((volatile uint32_t *)0x4006641C))
#define GPIO_PORTQ_AFSEL_R      (*((volatile uint32_t *)0x40066420))
#define GPIO_PORTQ_DR2R_R       (*((volatile uint32_t *)0x40066500))
#define GPIO_PORTQ_DR4R_R       (*((volatile uint32_t *)0x40066504))
#define GPIO_PORTQ_DR8R_R       (*((volatile uint32_t *)0x40066508))
#define GPIO_PORTQ_ODR_R        (*((volatile uint32_t *)0x4006650C))
#define GPIO_PORTQ_PUR_R        (*((volatile uint32_t *)0x40066510))
#define GPIO_PORTQ_PDR_R        (*((volatile uint32_t *)0x40066514))
#define GPIO_PORTQ_SLR_R        (*((volatile uint32_t *)0x40066518))
#define GPIO_PORTQ_DEN_R        (*((volatile uint32_t *)0x4006651C))
#define GPIO_PORTQ_LOCK_R       (*((volatile uint32_t *)0x40066520))
#define GPIO_PORTQ_CR_R         (*((volatile uint32_t *)0x40066524))
#define GPIO_PORTQ_AMSEL_R      (*((volatile uint32_t *)0x40066528))
#define GPIO_PORTQ_PCTL_R       (*((volatile uint32_t *)0x4006652C))
#define GPIO_PORTQ_ADCCTL_R     (*((volatile uint32_t *)0x40066530))
#define GPIO_PORTQ_DMACTL_R     (*((volatile uint32_t *)0x40066534))
#define GPIO_PORTQ_SI_R         (*((volatile uint32_t *)0x40066538))
#define GPIO_PORTQ_DR12R_R      (*((volatile uint32_t *)0x4006653C))
#define GPIO_PORTQ_WAKEPEN_R    (*((volatile uint32_t *)0x40066540))
#define GPIO_PORTQ_WAKELVL_R    (*((volatile uint32_t *)0x40066544))
#define GPIO_PORTQ_WAKESTAT_R   (*((volatile uint32_t *)0x40066548))
#define GPIO_PORTQ_PP_R         (*((volatile uint32_t *)0x40066FC0))
#define GPIO_PORTQ_PC_R         (*((volatile uint32_t *)0x40066FC4))


//*****************************************************************************
//
// System Control registers (SYSCTL)
//
//*****************************************************************************
#define SYSCTL_DID0_R           (*((volatile uint32_t *)0x400FE000))
#define SYSCTL_DID1_R           (*((volatile uint32_t *)0x400FE004))
#define SYSCTL_PTBOCTL_R        (*((volatile uint32_t *)0x400FE038))
#define SYSCTL_RIS_R            (*((volatile uint32_t *)0x400FE050))
#define SYSCTL_IMC_R            (*((volatile uint32_t *)0x400FE054))
#define SYSCTL_MISC_R           (*((volatile uint32_t *)0x400FE058))
#define SYSCTL_RESC_R           (*((volatile uint32_t *)0x400FE05C))
#define SYSCTL_PWRTC_R          (*((volatile uint32_t *)0x400FE060))
#define SYSCTL_NMIC_R           (*((volatile uint32_t *)0x400FE064))
#define SYSCTL_MOSCCTL_R        (*((volatile uint32_t *)0x400FE07C))
#define SYSCTL_RSCLKCFG_R       (*((volatile uint32_t *)0x400FE0B0))
#define SYSCTL_MEMTIM0_R        (*((volatile uint32_t *)0x400FE0C0))
#define SYSCTL_ALTCLKCFG_R      (*((volatile uint32_t *)0x400FE138))
#define SYSCTL_DSCLKCFG_R       (*((volatile uint32_t *)0x400FE144))
#define SYSCTL_DIVSCLK_R        (*((volatile uint32_t *)0x400FE148))
#define SYSCTL_SYSPROP_R        (*((volatile uint32_t *)0x400FE14C))
#define SYSCTL_PIOSCCAL_R       (*((volatile uint32_t *)0x400FE150))
#define SYSCTL_PIOSCSTAT_R      (*((volatile uint32_t *)0x400FE154))
#define SYSCTL_PLLFREQ0_R       (*((volatile uint32_t *)0x400FE160))
#define SYSCTL_PLLFREQ1_R       (*((volatile uint32_t *)0x400FE164))
#define SYSCTL_PLLSTAT_R        (*((volatile uint32_t *)0x400FE168))
#define SYSCTL_SLPPWRCFG_R      (*((volatile uint32_t *)0x400FE188))
#define SYSCTL_DSLPPWRCFG_R     (*((volatile uint32_t *)0x400FE18C))
#define SYSCTL_NVMSTAT_R        (*((volatile uint32_t *)0x400FE1A0))
#define SYSCTL_LDOSPCTL_R       (*((volatile uint32_t *)0x400FE1B4))
#define SYSCTL_LDODPCTL_R       (*((volatile uint32_t *)0x400FE1BC))
#define SYSCTL_RESBEHAVCTL_R    (*((volatile uint32_t *)0x400FE1D8))
#define SYSCTL_HSSR_R           (*((volatile uint32_t *)0x400FE1F4))
#define SYSCTL_USBPDS_R         (*((volatile uint32_t *)0x400FE280))
#define SYSCTL_USBMPC_R         (*((volatile uint32_t *)0x400FE284))
#define SYSCTL_EMACPDS_R        (*((volatile uint32_t *)0x400FE288))
#define SYSCTL_EMACMPC_R        (*((volatile uint32_t *)0x400FE28C))
#define SYSCTL_PPWD_R           (*((volatile uint32_t *)0x400FE300))
#define SYSCTL_PPTIMER_R        (*((volatile uint32_t *)0x400FE304))
#define SYSCTL_PPGPIO_R         (*((volatile uint32_t *)0x400FE308))
#define SYSCTL_PPDMA_R          (*((volatile uint32_t *)0x400FE30C))
#define SYSCTL_PPEPI_R          (*((volatile uint32_t *)0x400FE310))
#define SYSCTL_PPHIB_R          (*((volatile uint32_t *)0x400FE314))
#define SYSCTL_PPUART_R         (*((volatile uint32_t *)0x400FE318))
#define SYSCTL_PPSSI_R          (*((volatile uint32_t *)0x400FE31C))
#define SYSCTL_PPI2C_R          (*((volatile uint32_t *)0x400FE320))
#define SYSCTL_PPUSB_R          (*((volatile uint32_t *)0x400FE328))
#define SYSCTL_PPEPHY_R         (*((volatile uint32_t *)0x400FE330))
#define SYSCTL_PPCAN_R          (*((volatile uint32_t *)0x400FE334))
#define SYSCTL_PPADC_R          (*((volatile uint32_t *)0x400FE338))
#define SYSCTL_PPACMP_R         (*((volatile uint32_t *)0x400FE33C))
#define SYSCTL_PPPWM_R          (*((volatile uint32_t *)0x400FE340))
#define SYSCTL_PPQEI_R          (*((volatile uint32_t *)0x400FE344))
#define SYSCTL_PPLPC_R          (*((volatile uint32_t *)0x400FE348))
#define SYSCTL_PPPECI_R         (*((volatile uint32_t *)0x400FE350))
#define SYSCTL_PPFAN_R          (*((volatile uint32_t *)0x400FE354))
#define SYSCTL_PPEEPROM_R       (*((volatile uint32_t *)0x400FE358))
#define SYSCTL_PPWTIMER_R       (*((volatile uint32_t *)0x400FE35C))
#define SYSCTL_PPRTS_R          (*((volatile uint32_t *)0x400FE370))
#define SYSCTL_PPCCM_R          (*((volatile uint32_t *)0x400FE374))
#define SYSCTL_PPLCD_R          (*((volatile uint32_t *)0x400FE390))
#define SYSCTL_PPOWIRE_R        (*((volatile uint32_t *)0x400FE398))
#define SYSCTL_PPEMAC_R         (*((volatile uint32_t *)0x400FE39C))
#define SYSCTL_PPHIM_R          (*((volatile uint32_t *)0x400FE3A4))
#define SYSCTL_SRWD_R           (*((volatile uint32_t *)0x400FE500))
#define SYSCTL_SRTIMER_R        (*((volatile uint32_t *)0x400FE504))
#define SYSCTL_SRGPIO_R         (*((volatile uint32_t *)0x400FE508))
#define SYSCTL_SRDMA_R          (*((volatile uint32_t *)0x400FE50C))
#define SYSCTL_SREPI_R          (*((volatile uint32_t *)0x400FE510))
#define SYSCTL_SRHIB_R          (*((volatile uint32_t *)0x400FE514))
#define SYSCTL_SRUART_R         (*((volatile uint32_t *)0x400FE518))
#define SYSCTL_SRSSI_R          (*((volatile uint32_t *)0x400FE51C))
#define SYSCTL_SRI2C_R          (*((volatile uint32_t *)0x400FE520))
#define SYSCTL_SRUSB_R          (*((volatile uint32_t *)0x400FE528))
#define SYSCTL_SREPHY_R         (*((volatile uint32_t *)0x400FE530))
#define SYSCTL_SRCAN_R          (*((volatile uint32_t *)0x400FE534))
#define SYSCTL_SRADC_R          (*((volatile uint32_t *)0x400FE538))
#define SYSCTL_SRACMP_R         (*((volatile uint32_t *)0x400FE53C))
#define SYSCTL_SRPWM_R          (*((volatile uint32_t *)0x400FE540))
#define SYSCTL_SRQEI_R          (*((volatile uint32_t *)0x400FE544))
#define SYSCTL_SREEPROM_R       (*((volatile uint32_t *)0x400FE558))
#define SYSCTL_SRCCM_R          (*((volatile uint32_t *)0x400FE574))
#define SYSCTL_SREMAC_R         (*((volatile uint32_t *)0x400FE59C))
#define SYSCTL_RCGCWD_R         (*((volatile uint32_t *)0x400FE600))
#define SYSCTL_RCGCTIMER_R      (*((volatile uint32_t *)0x400FE604))
#define SYSCTL_RCGCGPIO_R       (*((volatile uint32_t *)0x400FE608))
#define SYSCTL_RCGCDMA_R        (*((volatile uint32_t *)0x400FE60C))
#define SYSCTL_RCGCEPI_R        (*((volatile uint32_t *)0x400FE610))
#define SYSCTL_RCGCHIB_R        (*((volatile uint32_t *)0x400FE614))
#define SYSCTL_RCGCUART_R       (*((volatile uint32_t *)0x400FE618))
#define SYSCTL_RCGCSSI_R        (*((volatile uint32_t *)0x400FE61C))
#define SYSCTL_RCGCI2C_R        (*((volatile uint32_t *)0x400FE620))
#define SYSCTL_RCGCUSB_R        (*((volatile uint32_t *)0x400FE628))
#define SYSCTL_RCGCEPHY_R       (*((volatile uint32_t *)0x400FE630))
#define SYSCTL_RCGCCAN_R        (*((volatile uint32_t *)0x400FE634))
#define SYSCTL_RCGCADC_R        (*((volatile uint32_t *)0x400FE638))
#define SYSCTL_RCGCACMP_R       (*((volatile uint32_t *)0x400FE63C))
#define SYSCTL_RCGCPWM_R        (*((volatile uint32_t *)0x400FE640))
#define SYSCTL_RCGCQEI_R        (*((volatile uint32_t *)0x400FE644))
#define SYSCTL_RCGCEEPROM_R     (*((volatile uint32_t *)0x400FE658))
#define SYSCTL_RCGCCCM_R        (*((volatile uint32_t *)0x400FE674))
#define SYSCTL_RCGCEMAC_R       (*((volatile uint32_t *)0x400FE69C))
#define SYSCTL_SCGCWD_R         (*((volatile uint32_t *)0x400FE700))
#define SYSCTL_SCGCTIMER_R      (*((volatile uint32_t *)0x400FE704))
#define SYSCTL_SCGCGPIO_R       (*((volatile uint32_t *)0x400FE708))
#define SYSCTL_SCGCDMA_R        (*((volatile uint32_t *)0x400FE70C))
#define SYSCTL_SCGCEPI_R        (*((volatile uint32_t *)0x400FE710))
#define SYSCTL_SCGCHIB_R        (*((volatile uint32_t *)0x400FE714))
#define SYSCTL_SCGCUART_R       (*((volatile uint32_t *)0x400FE718))
#define SYSCTL_SCGCSSI_R        (*((volatile uint32_t *)0x400FE71C))
#define SYSCTL_SCGCI2C_R        (*((volatile uint32_t *)0x400FE720))
#define SYSCTL_SCGCUSB_R        (*((volatile uint32_t *)0x400FE728))
#define SYSCTL_SCGCEPHY_R       (*((volatile uint32_t *)0x400FE730))
#define SYSCTL_SCGCCAN_R        (*((volatile uint32_t *)0x400FE734))
#define SYSCTL_SCGCADC_R        (*((volatile uint32_t *)0x400FE738))
#define SYSCTL_SCGCACMP_R       (*((volatile uint32_t *)0x400FE73C))
#define SYSCTL_SCGCPWM_R        (*((volatile uint32_t *)0x400FE740))
#define SYSCTL_SCGCQEI_R        (*((volatile uint32_t *)0x400FE744))
#define SYSCTL_SCGCEEPROM_R     (*((volatile uint32_t *)0x400FE758))
#define SYSCTL_SCGCCCM_R        (*((volatile uint32_t *)0x400FE774))
#define SYSCTL_SCGCEMAC_R       (*((volatile uint32_t *)0x400FE79C))
#define SYSCTL_DCGCWD_R         (*((volatile uint32_t *)0x400FE800))
#define SYSCTL_DCGCTIMER_R      (*((volatile uint32_t *)0x400FE804))
#define SYSCTL_DCGCGPIO_R       (*((volatile uint32_t *)0x400FE808))
#define SYSCTL_DCGCDMA_R        (*((volatile uint32_t *)0x400FE80C))
#define SYSCTL_DCGCEPI_R        (*((volatile uint32_t *)0x400FE810))
#define SYSCTL_DCGCHIB_R        (*((volatile uint32_t *)0x400FE814))
#define SYSCTL_DCGCUART_R       (*((volatile uint32_t *)0x400FE818))
#define SYSCTL_DCGCSSI_R        (*((volatile uint32_t *)0x400FE81C))
#define SYSCTL_DCGCI2C_R        (*((volatile uint32_t *)0x400FE820))
#define SYSCTL_DCGCUSB_R        (*((volatile uint32_t *)0x400FE828))
#define SYSCTL_DCGCEPHY_R       (*((volatile uint32_t *)0x400FE830))
#define SYSCTL_DCGCCAN_R        (*((volatile uint32_t *)0x400FE834))
#define SYSCTL_DCGCADC_R        (*((volatile uint32_t *)0x400FE838))
#define SYSCTL_DCGCACMP_R       (*((volatile uint32_t *)0x400FE83C))
#define SYSCTL_DCGCPWM_R        (*((volatile uint32_t *)0x400FE840))
#define SYSCTL_DCGCQEI_R        (*((volatile uint32_t *)0x400FE844))
#define SYSCTL_DCGCEEPROM_R     (*((volatile uint32_t *)0x400FE858))
#define SYSCTL_DCGCCCM_R        (*((volatile uint32_t *)0x400FE874))
#define SYSCTL_DCGCEMAC_R       (*((volatile uint32_t *)0x400FE89C))
#define SYSCTL_PCWD_R           (*((volatile uint32_t *)0x400FE900))
#define SYSCTL_PCTIMER_R        (*((volatile uint32_t *)0x400FE904))
#define SYSCTL_PCGPIO_R         (*((volatile uint32_t *)0x400FE908))
#define SYSCTL_PCDMA_R          (*((volatile uint32_t *)0x400FE90C))
#define SYSCTL_PCEPI_R          (*((volatile uint32_t *)0x400FE910))
#define SYSCTL_PCHIB_R          (*((volatile uint32_t *)0x400FE914))
#define SYSCTL_PCUART_R         (*((volatile uint32_t *)0x400FE918))
#define SYSCTL_PCSSI_R          (*((volatile uint32_t *)0x400FE91C))
#define SYSCTL_PCI2C_R          (*((volatile uint32_t *)0x400FE920))
#define SYSCTL_PCUSB_R          (*((volatile uint32_t *)0x400FE928))
#define SYSCTL_PCEPHY_R         (*((volatile uint32_t *)0x400FE930))
#define SYSCTL_PCCAN_R          (*((volatile uint32_t *)0x400FE934))
#define SYSCTL_PCADC_R          (*((volatile uint32_t *)0x400FE938))
#define SYSCTL_PCACMP_R         (*((volatile uint32_t *)0x400FE93C))
#define SYSCTL_PCPWM_R          (*((volatile uint32_t *)0x400FE940))
#define SYSCTL_PCQEI_R          (*((volatile uint32_t *)0x400FE944))
#define SYSCTL_PCEEPROM_R       (*((volatile uint32_t *)0x400FE958))
#define SYSCTL_PCCCM_R          (*((volatile uint32_t *)0x400FE974))
#define SYSCTL_PCEMAC_R         (*((volatile uint32_t *)0x400FE99C))
#define SYSCTL_PRWD_R           (*((volatile uint32_t *)0x400FEA00))
#define SYSCTL_PRTIMER_R        (*((volatile uint32_t *)0x400FEA04))
#define SYSCTL_PRGPIO_R         (*((volatile uint32_t *)0x400FEA08))
#define SYSCTL_PRDMA_R          (*((volatile uint32_t *)0x400FEA0C))
#define SYSCTL_PREPI_R          (*((volatile uint32_t *)0x400FEA10))
#define SYSCTL_PRHIB_R          (*((volatile uint32_t *)0x400FEA14))
#define SYSCTL_PRUART_R         (*((volatile uint32_t *)0x400FEA18))
#define SYSCTL_PRSSI_R          (*((volatile uint32_t *)0x400FEA1C))
#define SYSCTL_PRI2C_R          (*((volatile uint32_t *)0x400FEA20))
#define SYSCTL_PRUSB_R          (*((volatile uint32_t *)0x400FEA28))
#define SYSCTL_PREPHY_R         (*((volatile uint32_t *)0x400FEA30))
#define SYSCTL_PRCAN_R          (*((volatile uint32_t *)0x400FEA34))
#define SYSCTL_PRADC_R          (*((volatile uint32_t *)0x400FEA38))
#define SYSCTL_PRACMP_R         (*((volatile uint32_t *)0x400FEA3C))
#define SYSCTL_PRPWM_R          (*((volatile uint32_t *)0x400FEA40))
#define SYSCTL_PRQEI_R          (*((volatile uint32_t *)0x400FEA44))
#define SYSCTL_PREEPROM_R       (*((volatile uint32_t *)0x400FEA58))
#define SYSCTL_PRCCM_R          (*((volatile uint32_t *)0x400FEA74))
#define SYSCTL_PREMAC_R         (*((volatile uint32_t *)0x400FEA9C))


#endif /* REGS_H_ */
